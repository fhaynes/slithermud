"""
This is the Action Handler. It takes the Actions generated by the various
commands, and sends them to all the relevant logic modules. Each command
generates up to 3 actions. The first checks to see if a player *can* do
something. The second does it, and the third notifies everything that the
player did it.

@author: Fletcher Haynes
@copyright: (c)2004 Fletcher Haynes, All rights reserved.
"""

import MudWorld

class MudActionHandler:
    def doAction(self, action):
        if action.info['actionType']   == 'say':
            self.say(action)
        elif action.getType() == 'look':
            self.look(action)
        elif action.getType() == 'enterworld':
            self.enterworld(action)
        else:
            pass
    
    # -------------------------------------- #
    # Functions to pass actions to multiple
    # entities of the same type. All items 
    # in a room, all portals, etc.
    # -------------------------------------- #
            
    def actionRoom(self, action, room):
        """Sends the action instance to the supplied room."""
        room.doAction(action)
        
    def actionRoomItems(self, action, room):
        """Sends the action to all the items in the supplied room."""
        for eachItem in room.getItems().values():
            eachItem.doAction(action)
            
    def actionRoomChars(self, action, room):
        """Sends the action to all the characters in the supplied room."""
        for eachChar in room.getCharacters().values():
            eachChar.doAction(action)

    def actionRoomPortals(self, action, room):
        """Sends the action to all the portals in the supplied room."""
        for eachPortal in room.getPortals().values():
            eachPortal.doAction(action)

            
    # -------------------- #
    #  Querying Functions  #
    # -------------------- #
            
    def queryRoom(self, action):
        """Queries the room of the player that generated the action."""
        return action.getPlayerRef().getRoomRef().doQuery(action)
    
    def queryRoomChars(self, action):
        """
        Queries all the characters in the room of the player that generated
        the action.
        """
        for eachChar in action.getPlayerRef().getRoomRef().getCharacters().values():
            result = eachChar.doQuery(action)
            if result == 1:
                return 1
        return 0
    
    def queryRoomItems(self, action):
        """
        Queries each item in the room of the player that generated the action.
        """
        for eachItem in action.getPlayerRef().getRoomRef().getItems().values():
            result = eachItem.doQuery(action)
            if result == 1:
                return 1
        return 0
    
    def queryRoomPortals(self, action):
        """
        Queries each portal in the room of the player that generated the action.
        """
        
        for eachPortal in action.getPlayerRef().getRoomRef().getPortals().values():
            result = eachPortal.doQuery(action)
            if result == 1:
                return 1
        return 0

    
    # ------------------------------ #
    # Handlers for specific actions  #
    # ------------------------------ #
    
    def enterworld(self, action):
        """Handles setting a player up in the world."""
        # TODO: Error checking for not finding the zone #
        destZone = MudWorld.world.getZone(action.getData1())
        destZone.addCharacter(action.getPlayerRef())
        destRoom = destZone.getRoom(action.getData2())
        destRoom.addCharacter(action.getPlayerRef())
        
        
    def say(self, action):
        """Handles say actions."""
        action.setType('cansay')
        # First we have to check with the room to see if it is ok for them
        # to say something.
        
        result = self.queryRoom(action)
        if result == 1:
            return
        
        # Now we check all the other players in the room.
        result = self.queryRoomChars(action)
        if result == 1:
            return
            
        # Now we check all the items.
        result = self.queryRoomItems(action)
        if result == 1:
            return
        
        # If we are this point, nothing denied the action. So we change the
        # actiontype back to 'say'.
        action.setType('say')
        
        # And now we tell each relevant entity what was said.
        self.actionRoom(action, action.getPlayerRef().getRoomRef())
        self.actionRoomItems(action, action.getPlayerRef().getRoomRef())
        self.actionRoomChars(action, action.getPlayerRef().getRoomRef())

    def look(self, action):
        """Handles look actions."""
        
        action.setType('canlook')
        
        result = self.queryRoom(action)
        if result == 1:
            return
        
        # Now we check all the other players in the room.
        result = self.queryRoomChars(action)
        if result == 1:
            return
            
        # Now we check all the items.
        result = self.queryRoomItems(action)
        if result == 1:
            return
        
        action.setType('look')
        self.actionRoom(action, action.getPlayerRef().getRoomRef())
        self.actionRoomChars(action, action.getPlayerRef().getRoomRef())
        self.actionRoomItems(action, action.getPlayerRef().getRoomRef())
        
        
        
        
    